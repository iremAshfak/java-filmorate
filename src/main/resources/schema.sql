DROP TABLE IF EXISTS USERS, MPARATING, FILMS, FRIENDSHIP, LIKES, GENRES, FILM_GENRES, DIRECTORS, FILM_DIRECTORS, REVIEWS, REVIEW_LIKES, EVENTS;

CREATE TABLE IF NOT EXISTS USERS  (
	USER_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	EMAIL VARCHAR(50),
	LOGIN VARCHAR(100),
	NAME VARCHAR(100),
	BIRTHDAY DATE
);

CREATE TABLE IF NOT EXISTS MPARATING  (
	MPARATING_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	NAME VARCHAR(20)
);

CREATE TABLE IF NOT EXISTS FILMS  (
	FILM_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	NAME VARCHAR(50),
	DESCRIPTION VARCHAR(200),
	RELEASEDATE DATE,
	DURATION INTEGER,
	MPARATING_ID INTEGER,
	FOREIGN KEY (MPARATING_ID) REFERENCES MPARATING(MPARATING_ID)
);

CREATE TABLE IF NOT EXISTS FRIENDSHIP  (
	FRIENDSHIP_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	USER_ID INTEGER,
	FRIEND_ID INTEGER,
	FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
	FOREIGN KEY (FRIEND_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS LIKES  (
	LIKES_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	USER_ID INTEGER,
	FILM_ID INTEGER,
	FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
	FOREIGN KEY (FILM_ID) REFERENCES FILMS(FILM_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS GENRES  (
	GENRES_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	NAME VARCHAR(20)
);

CREATE TABLE IF NOT EXISTS FILM_GENRES  (
	FILM_GENRES_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	FILM_ID INTEGER,
	GENRES_ID INTEGER,
	FOREIGN KEY (FILM_ID) REFERENCES FILMS(FILM_ID) ON DELETE CASCADE,
	FOREIGN KEY (GENRES_ID) REFERENCES GENRES(GENRES_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS DIRECTORS (
    ID LONG GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS FILM_DIRECTORS  (
    FILM_ID INTEGER,
    DIRECTOR_ID LONG,
    foreign key (FILM_ID) references FILMS (FILM_ID) on DELETE cascade,
    foreign key (DIRECTOR_ID) references DIRECTORS (ID) on DELETE cascade,
    primary key (FILM_ID, DIRECTOR_ID)
);

CREATE TABLE IF NOT EXISTS REVIEWS (
    id LONG GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content varchar NOT NULL,
    is_positive boolean NOT NULL,
    USER_ID INTEGER,
    FILM_ID INTEGER,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    foreign key (FILM_ID) references FILMS (FILM_ID) on DELETE cascade,
    useful INTEGER
);

CREATE TABLE IF NOT EXISTS REVIEW_LIKES (
    review_id INTEGER,
    user_id INTEGER,
    foreign key (review_id) references REVIEWS (id) on DELETE cascade,
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    like_type varchar NOT NULL,
    PRIMARY KEY (review_id, user_id)
);

CREATE TABLE IF NOT EXISTS EVENTS (
    id LONG GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    entity_id BIGINT NOT NULL,
    event_type varchar NOT NULL,
    operation varchar NOT NULL,
    user_id BIGINT REFERENCES USERS(USER_ID) ON DELETE CASCADE,
    created_at timestamp NOT NULL
);
